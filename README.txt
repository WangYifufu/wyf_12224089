姓名：王毅夫 
学号：12224089
课程：三维CAD建模
授课老师：高曙明
编程环境：VS2022

程序主要文件：在\CAD\CAD中的 
Half_Edge_Struct.h（半边数据结构）
oula_op.h （欧拉操作头文件）
oula_op.cpp （欧拉操作与扫掠函数实现）
源.cpp （opengl的gult界面进行真实感图形显示）

交互方式：文件交互
方式一： 打开CAD.sln重新编译程序（release），修改\CAD\CAD\DIYSWEEPING.txt，
方式二： 直接使用可执行程序，\CAD\x64\Release\CAD，修改\CAD\x64\Release\DIYSWEEPING.txt
修改方式及格式如下：
DIYSWEEPING.txt文件中
第一行：扫掠方向——X,Y,Z，距离d
第二行：内环数量N。（为测试方便，准备了4个内环，直接修改内环个数即可，亦可以按照格式重新修改）
第三行：外环点的个数
外环点的坐标：x1,y1,z1
                ... ...
                ... ...
              ... ...
第xx行：第一个内环点的个数n
第一个内环点的坐标：x1,y1,z1
                     ... ...
                     ... ...
     ... ... ... ... ... ... ... 
第xx行：第N个内环点的个数n
第N个内环点的坐标：x1,y1,z1
                    ... ...
                    ... ...
重修修改测试案例注意：由于UI界面设置问题，点的位置不要太大，一般在100左右视觉体验较好。

运行程序结果：
1.左边的的带孔正方体完全由欧拉操作一步步构成，操作过程在函数Cube()中，在源.cpp文件中
2.右边的房子由欧拉操作构成面，再通过扫成构成，操作过程在函数House()中，在源.cpp文件中
3.中间的带孔六边形由文件读取形成，读取文件、调用欧拉操作、调用扫掠操作在DiySweeping()中，在源.cpp文件中

编程过程：
编程时间10.28~11.3（7天）
1~3天：完成欧拉操作即扫掠操作，并通过opengl_glfw实现线框的显示
4天：为了实现面的显示，使用opengl_gult的带孔多边形显示的方法，无果。研究gult，终发现是欧拉操作还有错。
因为使用线框显示边的方法是遍历所有的边，因此虽然能把想要的图的边与点显示出来，但是环不一定正确，因此错误的环不能绘制正确的面的图像。
5天：修改欧拉操作，主要错误在mef()，与kemr()，对于环的处理，实现带面的图的输出。
6天：尝试使用imgui增加界面，搞了一天无果，放弃界面使用文件交互。
7天：文档编写，汇总处理。

函数说明及细节分析：
Solid* mvfs(double x, double y, double z, Vertex*& newVertex);    //给定初始点，构造一个新的体,包含一个面,一个外环,一个点
无问题

HalfEdge* mev(Vertex* st, double x, double y, double z, Loop* lp); //给定一个新点，结束点,连接这两个点，形成一条新的边
在扫掠操作时报了这里的错误，经过排查发现问题不在mev，而是kfmrh使得环在错误的面上。

Loop* mef(Vertex* st, Vertex* ed, Loop* lp);///给定一个新边，形成一个新的面,更新环
编程之初我新建的面与环是外部的，即新的loop与旧的loop指向的半边反了。
这给后续调用的mef带来很多麻烦，虽然仍能生成图形，但是每次mef都需记录环给后续使用，后修改。
mef的点起始点与终止点，亦需要选择正确的方向，需要与新建的面的外环方向所相同，全逆时针。
mef对于有内环的操作，需要多一步判断，将过程中的一条半边换到以同一个终点的另一条半边上去。

Loop* kemr(Vertex* st, Vertex* ed, Loop* lp);//删除一条边构造一个环
kemr的起始点在外环上，终止点在内环上。

void kfmrh(Loop* outlp, Loop* lp);//删除一个与面F相接触的一个面f
开始使用的参数是两个面，但是后面发现还要从环指向面，就将参数改成了环。

void sweep(Face* face, double x, double y, double z, double d);//扫掠操作
扫掠操作我开始理解错了，我本以为是根据底面再复制一个顶面。
后续思考，理解为mvfs和mef其实已经造了两个面了，是将这个面“抬”到顶面

困扰点：
整个程序最开始真正让我感到困扰的其实是“面”这个概念，就像仅生成一个正方形。
需要一次mvfs，三次mev，一次mef。这里已经有两个面了，但是那个面在哪里呢？
这个问题其实在课后就和高老师讨论过，不过当时还是一知半解，到最后变得混乱也就不了了之。
而在编程时对这个基础概念不了解，大大增加了我的难度，让整个过程变的困难。

1.我最开始理解的是这个面的正面与反面，带着这个最初以为的觉得理所当然的概念去编程导致一塌糊涂。
2.后面我理解为一个面就是这个正方形，另一个面其实是正方形外部的范围。这个想法可以支撑程序的想法。
   在构建正方体的过程中，这个外部的面被一直缩小限制，最终形成了正方体的顶面。
3.在完成整个项目后，我豁然开朗，就不应该用传统的面这个概念，来理解这里这个面。
   而应该只有环这个概念，面不过是环的载体，不存在没有环的面。
   一个环对应一个面，一个面可以有好几个环（即内环）

感悟：
	纸上得来终觉浅，绝知此事要躬行。
	上课总觉得差不多应该听懂了，真的要将其实现才发现有许多的细节需要好好的思考处理。
	最后，感谢高老师一个学期的教导。
	
王毅夫
2022.11.3











